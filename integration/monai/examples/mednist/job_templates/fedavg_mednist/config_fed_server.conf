{
  # version of the configuration
  format_version = 2

  # task data filter: if filters are provided, the filter will filter the data flow out of server to client.
  task_data_filters =[]

  # task result filter: if filters are provided, the filter will filter the result flow out of client to server.
  task_result_filters = []

  # This assumes that there will be a "net.py" file with class name "Net".
  # If your model code is not in "net.py" and class name is not "Net", please modify here

  # workflows: Array of workflows the control the Federated Learning workflow lifecycle.
  # One can specify multiple workflows. The NVFLARE will run them in the order specified.
  workflows = [
      {
        # 1st workflow"
        id = "fedavg"

        # name = ScatterAndGather, path is the class path of the ScatterAndGather controller.
        path = "fedavg_monai.FedAvgMONAI"
        args {
            # argument of the ScatterAndGather class.
            # min number of clients required for ScatterAndGather controller to move to the next round
            # during the workflow cycle. The controller will wait until the min_clients returned from clients
            # before move to the next step.
            min_clients = 1

            # number of global round of the training.
            num_rounds = 50
        }
      }
  ]

  # List of components used in the server side workflow.
  components = [
    {
      # This component is not directly used in Workflow.
      # it select the best model based on the incoming global validation metrics.
      id = "model_selector"
      path =  "nvflare.app_common.widgets.intime_model_selector.IntimeModelSelector"
      # need to make sure this "key_metric" match what server side received
      args.key_metric = "accuracy"
    }
  ]

}
